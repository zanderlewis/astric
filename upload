#!/usr/bin/env python3

import subprocess
import argparse
import time
import os

def upload(version_increment):
    # Cleanup python files
    subprocess.run(["python3", "cleanup.py"], check=True)

    # Remove build files
    if os.path.exists("build"):
        subprocess.run(["rm", "-rf", "build"], check=True)
    if os.path.exists("hyperialum.egg-info"):
        subprocess.run(["rm", "-rf", "hyperialum.egg-info"], check=True)
    if os.path.exists("dist"):
        subprocess.run(["rm", "-rf", "dist"], check=True)

    # Increment the version
    with open("version.txt", "r") as file:
        version = file.read().strip()
    
    major, minor, patch = map(int, version.split('.'))
    if version_increment == "major":
        major += 1
        minor = 0
        patch = 0
    elif version_increment == "minor":
        minor += 1
        patch = 0
    elif version_increment == "patch":
        patch += 1
    new_version = f"{major}.{minor}.{patch}"
    
    with open("version.txt", "w") as file:
        file.write(new_version)

    time.sleep(1)

    # Build the package
    subprocess.run(["python3", "setup.py", "sdist", "bdist_wheel"], check=True)

    # Upload the package
    subprocess.run(["twine", "upload", "dist/*"], check=True)

if __name__ == "__main__":
    argparse = argparse.ArgumentParser()
    argparse.add_argument("version_increment", type=str, help="The version increment to use")
    args = argparse.parse_args()

    if not args.version_increment or args.version_increment not in ["major", "minor", "patch"]:
        raise ValueError("Invalid version increment")
    
    upload(args.version_increment)